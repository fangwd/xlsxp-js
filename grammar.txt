  formula = expression 
   
  expression= ref-expression / *whitespace nospace-expression *whitespace
  ref-expression= *whitespace ref-nospace-expression *whitespace
  nospace-expression = "("   expression   ")" / constant / prefix-operator expression / expression infix-operator expression / expression postfix-operator / function-call 
  ref-nospace-expression = "("   ref-expression   ")" / ref-constant / ref-expression ref-infix-operator ref-expression / cell-reference / ref-function-call / name-reference / structure-reference 
  constant = error-constant / logical-constant / numerical-constant / string-constant / array-constant 
  ref-constant = "#REF!"
  error-constant = ref-constant / "#DIV/0!"   /   "#N/A"   /   "#NAME?"   /   "#NULL!" / "#NUM!"   / "#VALUE!" / "#GETTING_DATA"
  logical-constant = "FALSE"   /   "TRUE"   
  numerical-constant = [neg-sign] significand-part [exponent-part] 
  significand-part = whole-number-part [fractional-part] / fractional-part
  whole-number-part = digit-sequence
  fractional-part = full-stop digit-sequence
  exponent-part = exponent-character [ sign ] digit-sequence 
  full-stop = "." 
  sign = "+"   / neg-sign 
  neg-sign = "-" 
  exponent-character = "E"
  digit-sequence = 1*decimal-digit
  decimal-digit=   %x30-39
  nonzero-decimal-digit = %x31-39
  string-constant = double-quote [string-chars] double-quote
  string-chars = string-char *string-char
  string-char = escaped-double-quote / character ; MUST NOT be a double-quote
  escaped-double-quote = 2double-quote
  double-quote = %x22
  ;character = as defined by the production Char in the [W3C-XML] section 2.2
  array-constant = "{" constant-list-rows "}"   
  constant-list-rows =   constant-list-row *(semicolon   constant-list-row) 
  semicolon =   ";"
  constant-list-row = constant *(comma constant)
  ;An array-constant MUST NOT contain an array-constant or columns of unequal length or rows of unequal length.
  operator = ":" / comma / space / "^" / "*" / "/" / "+" / "-" / "&amp;" / "=" / "&lt;&gt;" / "&lt;" / "&lt;=" / "&gt;" / "&gt;=" / "%"   
  infix-operator = ref-infix-operator / value-infix-operator
  value-infix-operator = "^" / "*" / "/" / "+" / "-" / "&amp;"/ "=" / "&lt;&gt;" / "&lt;" / "&lt;=" / "&gt;" / "&gt;="   
  ref-infix-operator = range-operator / union-operator / intersection-operator
  union-operator = comma
  intersection-operator = space
  range-operator = ":"
  postfix-operator =   "%"
  prefix-operator =   "+"   /   "-"
  cell-reference = external-cell-reference / local-cell-reference
  local-cell-reference = A1-reference 
  external-cell-reference = bang-reference / sheet-range-reference / single-sheet-reference 
  book-prefix = workbook-index "!" 
  bang-reference = "!" (A1-reference / "#REF!")
  sheet-range-reference = sheet-range "!" A1-reference
  single-sheet-prefix = single-sheet "!" 
  single-sheet-reference = single-sheet-prefix (A1-reference / "#REF!")
  single-sheet-area = single-sheet-prefix A1-area
  single-sheet = [workbook-index] sheet-name / apostrophe [workbook-index] sheet-name-special apostrophe 
  sheet-range = [workbook-index] sheet-name ":" sheet-name / apostrophe [workbook-index] sheet-name-special ":" sheet-name-special apostrophe
  workbook-index = "[" whole-number-part "]" 
  sheet-name = sheet-name-characters 
  sheet-name-characters = 1*sheet-name-character
  sheet-name-character = character ; MUST NOT be an operator, ', [, ], \, or ? 
  apostrophe= "'"
  space = " " 
  whitespace = space / %x0D %x0A
  sheet-name-special = sheet-name-base-character   [*sheet-name-character-special sheet-name-base-character]
  sheet-name-character-special = 2apostrophe / sheet-name-base-character
  sheet-name-base-character = character ; MUST NOT be ', *, [, ], \, :, /, ?, or Unicode character 'END OF TEXT'
  A1-reference = (A1-column ":" A1-column) / (A1-row ":" A1-row) / A1-cell / A1-area
  A1-cell = A1-column A1-row
  A1-area = A1-cell ":" A1-cell
  A1-column = A1-relative-column / A1-absolute-column
  A1-relative-column = 1*2letter / A-to-W 2letter / "X" A-to-E letter / "XF" A-to-D
  A-to-D = %x41-44 / %x61-64
  A-to-E = A-to-D / "E"
  A-to-W = %x41-57 / %x61-77
  letter = %x41-5A / %x61-7A
  A1-absolute-column = "$" A1-relative-column
  A1-row = A1-relative-row / A1-absolute-row
  A1-relative-row = row-digit-sequence
  row-digit-sequence = nonzero-decimal-digit *5decimal-digit /   "10" %x30-33 4decimal-digit / "104" %x30-37 3decimal-digit / "1048" %x30-34 2decimal-digit / "10485" %x30-36 decimal-digit / "104857" %x30-36
  A1-absolute-row = "$" A1-relative-row
  cell-function-call = A1-cell "(" argument-list ")"
  user-defined-function-call = user-defined-function-name "(" argument-list ")" 
  user-defined-function-name = name-reference 
  argument-list = argument *253(comma argument)
  comma= ","
  argument = *whitespace [argument-expression]
  argument-expression= ref-argument-expression / *whitespace nospace-argument-expression *whitespace
  ref-argument-expression= *whitespace ref-argument-nospace-expression *whitespace
  nospace-argument-expression = "("   expression   ")" / constant / prefix-operator argument-expression / argument-expression argument-infix-operator argument-expression / argument-expression postfix-operator / function-call 
  ref-argument-nospace-expression = "("   ref-expression   ")" / ref-constant / ref-argument-expression ref-argument-infix-operator ref-argument-expression / cell-reference / ref-function-call / name-reference / structure-reference 
  argument-infix-operator = ref-argument-infix-operator / value-infix-operator
   
  ref-argument-infix-operator = range-operator / intersection-operator
  unicode-digit = any-code ;(any code points which are digits as defined by the Unicode character properties, [UNICODE5.1] chapter 4)
  R1C1-cell-reference = R1C1-row / R1C1-column / R1C1-row R1C1-column / R1C1-column R1C1-row
  R1C1-row = "R" row-number
   
  R1C1-column = "C" column-number
  column-number = integer-1-16384
  ; A string composed of unicode-digits that represents an unsigned integer that is greater than or equal to 1 and less than or equal to 16384
   
  row-number = integer-1-1048576
  ; A string composed of unicode-digits that represents an unsigned integer that is greater than or equal to 1 and less than or equal to 1048576.
   
  name-reference = name / external-name
  external-name = bang-name / (single-sheet-prefix / book-prefix ) name
  bang-name = "!" name
  name = name-start-character [ name-characters ]
  name-start-character = underscore   /   backslash   /   letter / name-base-character
  underscore = "_"   
  backslash = "\" 
  name-base-character = any-code ;(any code points which are characters as defined by the Unicode character properties, [UNICODE5.1] chapter 4 ; MUST NOT be 0x0-0x7F)
  name-characters= 1*name-character
  name-character = name-start-character / decimal-digit / full-stop   / questionmark 
  questionmark = "?" 
  ;A name MUST NOT have any of the following forms:
  ;TRUE or FALSE
  ;cell-reference
  ;function-list
  ;command-list
  ;future-function-list
  ;R1C1-cell-reference
   
  structure-reference = [table-identifier] intra-table-reference
  table-identifier = [book-prefix] table-name
  table-name = name
  ;table-name is the name of the table the structure reference refers to. If it is missing, the formula containing the structure reference MUST be entered into a cell which belongs to a table and that table's name is used as the table-name. table-name MUST be the value of the displayName attribute of some table element ([ISO/IEC29500-1:2016] section 18.5.1.2). It MUST NOT be any other user-defined name.
  intra-table-reference = spaced-lbracket inner-reference spaced-rbracket / keyword / ("[" [simple-column-name] "]")
  inner-reference = keyword-list / ([keyword-list spaced-comma] column-range)
  keyword = "[#All]" / "[#Data]" / "[#Headers]" / "[#Totals]" / "[#This Row]"
  keyword-list = keyword / ("[#Headers]" spaced-comma "[#Data]") / ("[#Data]" spaced-comma "[#Totals]")
  column-range = column [":" column]
  column = simple-column-name / ("[" *space simple-column-name *space "]")
  simple-column-name = [any-nospace-column-character *any-column-character] any-nospace-column-character
  escape-column-character = tick / "[" / "]" / "#"
  tick = %x27
  unescaped-column-character = character     ; MUST NOT match escape-column-character or space
  any-column-character = any-nospace-column-character / space
  any-nospace-column-character = unescaped-column-character / (tick escape-column-character)
  spaced-comma = [space] comma [space]
  spaced-lbracket = "[" [space]
  spaced-rbracket = [space] "]"
  function-call = user-defined-function-call
